// TYPE: expr
/* STDOUT:
2894925162 964975052
*/

var x : u32 = 1;

fn n(n_a:u32) : u32 {
    var n_x : u32 = 2 + n_a * 4;
    if (n_a == 0)
        return 5;
    fn n_1(n_1_a:u32) : u32 {
        fn n_1_1(n_1_1_a:u32) : u32 {
            return n_a + n_1_1_a;
        };
        return n_1_1(n_1_a);
    };
    fn n_2(n_2_a:u32) : u32 {
        fn n_2_1(n_2_1_a:u32) : u32 {
            return n_1(n_x * 2 + n_2_1_a)
                + n(n_a - 1)
                + n_2(n_2_a - 1);
        };
        if (n_2_a > 0) {
            var tmp = n_x;
            n_x = tmp + n_2_1(n_2_a - 1);
        };
        n_2_a = n_2_a + 1;
        return n_1(n_x * 3) + n(n_a - 1) + n_2_a;
    };
    var tmp2 = x;
    x = tmp2 + n_2(n_a - 1);
    n_a = n_a + n_1(x);
    return n_a + x * 2;
};

fn printf {C} (fmt:c_string,...) : c_int;

var a : u32 = n(3);
printf(&"%u %u\n"[], a, x);

/*
 *Lua code to check with:

local x = 1

local function n(n_a)
    local n_x = 2 + n_a * 4
    if n_a == 0 then
        return 5
    end
    local function n_1(n_1_a)
        local function n_1_1(n_1_1_a)
            return n_a + n_1_1_a
        end
        return n_1_1(n_1_a)
    end
    local function n_2(n_2_a)
        local function n_2_1(n_2_1_a)
            return (n_1(n_x * 2 + n_2_1_a)
                + n(n_a - 1)
                + n_2(n_2_a - 1))
        end
        if n_2_a > 0 then
            local tmp = n_x
            n_x = tmp + n_2_1(n_2_a - 1)
        end
        n_2_a = n_2_a + 1
        return n_1(n_x * 3) + n(n_a - 1) + n_2_a
    end
    local tmp2 = x
    x = tmp2 + n_2(n_a - 1)
    n_a = n_a + n_1(x)
    return n_a + x * 2
end

local a = n(3)
print(string.format("%s %s", a, x))
*/
